{"version":3,"sources":["components/Currency.js","services/service.js","components/AddCurrency.js","components/EditCurrency.js","constants/Constants.js","components/CurrencyList.js","App.js","index.js"],"names":["memo","props","TarCurr","SrcCurr","Diff","CurrVal","react_default","a","createElement","className","toFixed","onClick","DelCurrency","services_service","Service","Object","classCallCheck","this","service","axios","create","path","callback","get","then","response","status","data","catch","err","message","AddClicked","currencyList","AllCurrencies","forEach","val","push","key","value","onChange","e","CurrencyVal","target","type","SubmitClicked","Constants","apiConstants","url","symbols","qBase","qSymbols","CurrencyList","state","allCurrencies","currencies","selectedCurrency","currentVal","addCurrency","newCurrency","renderCurrency","arr","_this$state","_this","components_Currency","delCurrency","txtChange","isNaN","setState","addClicked","currencyVal","curr","assign","submitClicked","self","assertThisInitialized","_self$state","trim","alert","hasOwnProperty","objectSpread","rates","indexOf","includes","console","log","_this$state2","defaultValue","components_AddCurrency","components_EditCurrency","Component","App","components_CurrencyList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d5c11f2b.chunk.js","sourcesContent":["import React,{memo} from 'react'\n\nfunction Currency(props){\n    const {TarCurr,SrcCurr,Diff,CurrVal} = props\n    return(\n        <div className=\"currency-main\">          \n           <div className=\"currency\">\n             <p>{SrcCurr} <span  className=\"floatRight\">{(Diff*CurrVal).toFixed(4)}</span></p>\n             <p>1 {TarCurr} = {SrcCurr} {Diff.toFixed(4)}</p>\n               </div>\n               <label className=\"labelBtn delBtn\" onClick={() => {props.DelCurrency(SrcCurr)}} > (-) </label>\n            </div>\n    )\n   \n}\n\nexport default memo(Currency)","import axios from 'axios';\r\n\r\nclass Service{\r\n\r\n\tconstructor(){\r\n\tlet service = axios.create({});\r\n\tthis.service = service;\r\n\t }\r\n\r\n\tget(path,callback){\r\n\t\treturn this.service.get(path).then(\r\n\t\t\tresponse => callback(response.status,response.data)).catch(err => callback(err.message))\r\n\t}\r\n}\r\n\r\nexport default new Service();","import React,{memo} from 'react';\n\nfunction AddCurrency(props){\n return (\n     <div className=\"add-currency\">\n     <label className=\"labelBtn addBtn\" onClick={() => {props.AddClicked()}}> (+) </label>Add More Currencies\n     </div>\n )\n}\n\nexport default memo(AddCurrency)\n","import React,{memo} from 'react';\n\nfunction EditCurrency(props){\n    let currencyList = [];\n    props.AllCurrencies.forEach(val => {\n        currencyList.push(<option key={'k'+val} value={val}>{val}</option>)\n    })\n    return (\n        <div className=\"add-currency edit-currency\">\n        <select onChange={(e) => {props.CurrencyVal(e.target.value)}} >\n        {currencyList}\n        </select>\n        <input type=\"button\" value=\"Submit\" onClick={() => {props.SubmitClicked()}}/>\n       </div>\n    )\n   }\n   \n   export default memo(EditCurrency)","export default {\n     apiConstants:{\n        url:\"https://api.exchangeratesapi.io\",\n        symbols : [\"CAD\",\"IDR\",\"SGD\",\"INR\"],\n        qBase:\"/latest?base=\",\n        qSymbols:\"&symbols=\"\n     }\n}","import React,{Component} from 'react';\nimport Currency from './Currency';\nimport Service from '../services/service';\nimport AddCurrency from './AddCurrency';\nimport EditCurrency from './EditCurrency';\nimport Constants from '../constants/Constants'\n\nclass CurrencyList extends Component{\n    state = {\n        allCurrencies:[],\n        currencies: {},\n        selectedCurrency: \"USD\",\n        currentVal: 10,\n        addCurrency: true,\n        newCurrency: \"\"\n    }\n\n    componentDidMount() {\n        const self = this;\n        const {\n            selectedCurrency\n        } = self.state;\n        Service.get(Constants.apiConstants.url + Constants.apiConstants.qBase + selectedCurrency, (status, data) => {\n            if (typeof data !== 'undefined'){\n                let currencies = {};\n                let allCurrencies = [];\n                let rates = data.rates;\n                for(let key in rates){\n                    allCurrencies.push(key);\n                    if(Constants.apiConstants.symbols.includes(key))\n                    currencies[key] = rates[key];\n                }\n                console.log(allCurrencies[0])\n                self.setState({\n                    newCurrency:allCurrencies[0], currencies,allCurrencies\n                });\n            }\n            else\n                alert(status.indexOf(\"400\") ? \"Please Input Valid Currencies\" : \"Something went wrong\")\n        });\n    }    \n\n    renderCurrency = () => {\n        let arr = [];        \n        const {selectedCurrency,currencies,currentVal} = this.state;\n        for(let key in currencies){\n            arr.push(<Currency key={key} TarCurr={selectedCurrency} SrcCurr={key} CurrVal={currentVal}  Diff={currencies[key]} DelCurrency={this.delCurrency}/>)\n        }\n        return arr;\n    }\n\n    txtChange = (e) => {\n        const currentVal = e.target.value\n        if(!isNaN(currentVal))\n        this.setState({currentVal});\n    }\n\n    addClicked = () => {\n        this.setState({addCurrency: false})\n    }\n\n    currencyVal = (newCurrency) => {\n        this.setState({newCurrency})\n    }\n\n    delCurrency = (curr) => {\n        let currencies = Object.assign({},this.state.currencies);\n        delete currencies[curr]\n        this.setState({currencies}) \n    }\n\n    submitClicked = () => {\n        const self = this;\n        const {selectedCurrency,newCurrency} = self.state;\n        if(newCurrency.trim() === '')\n            alert(\"Please input currency\")\n        else if(self.state.currencies.hasOwnProperty(newCurrency)){\n            alert(newCurrency + \" already exist\")\n        }\n        else{\n        Service.get(Constants.apiConstants.url+Constants.apiConstants.qBase+selectedCurrency+Constants.apiConstants.qSymbols+newCurrency, (status, data) => {\n            if(typeof data !== 'undefined')    \n            self.setState({\n            addCurrency:true,\n            newCurrency:self.state.allCurrencies[0],\n            currencies: {...self.state.currencies,...data.rates}\n            });\n            else\n            alert(status.indexOf(\"400\") ? \"Please Input Valid Currency\":\"Something went wrong\")\n        });\n        }\n    }\n\n    render(){\n        const {selectedCurrency,currentVal,addCurrency,allCurrencies} = this.state;\n        return(\n            <div className=\"currencylist\">\n                <div className=\"currency-head\">\n                <h3>{selectedCurrency}<input type=\"text\" defaultValue={currentVal} className=\"floatRight\" onChange={this.txtChange} /></h3>\n                </div>\n                {this.renderCurrency()}\n                {addCurrency ? <AddCurrency AddClicked={this.addClicked}/> : <EditCurrency AllCurrencies={allCurrencies} CurrencyVal={this.currencyVal} SubmitClicked={this.submitClicked}/>}\n            </div>                \n        )\n    }\n}\n\n\nexport default CurrencyList;","import React from 'react';\nimport './App.css';\nimport CurrencyList from './components/CurrencyList'\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n          <CurrencyList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}